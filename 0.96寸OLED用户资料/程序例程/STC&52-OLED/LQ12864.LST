C51 COMPILER V7.10   LQ12864                                                               09/17/2011 23:55:08 PAGE 1   


C51 COMPILER V7.10, COMPILATION OF MODULE LQ12864
OBJECT MODULE PLACED IN LQ12864.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LQ12864.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /********************************************
   2          龙丘OLED屏测试程序-STC&89C52 
   3          Designed by Chiu Sir
   4          E-mail:chiusir@yahoo.cn
   5          软件版本:V1.1
   6          最后更新:2011年9月3日
   7          相关信息参考下列地址：
   8          网站：  http://www.lqist.cn
   9          淘宝店：http://shop36265907.taobao.com
  10          
  11          使用说明：
  12          OLED电源使用3.3V。   
  13          ----------------
  14          G    电源地
  15          3.3V 接3.3V电源
  16          D0   P1.0  
  17          D1       P1.1
  18          RST  P1.2 
  19          DC   P1.3
  20          CS   已接地，不用接
  21          ============================================
  22          OLED电源使用5V。   
  23          ----------------
  24          G    电源地
  25          3.3V 接5V电源，电源跟模块之间串接100欧姆电阻，并加3.3V钳位二极管
  26          D0   P1.0 单片机跟模块之间串接1k-3.3k电阻 
  27          D1       P1.1 单片机跟模块之间串接1k-3.3k电阻 
  28          RST  P1.2 单片机跟模块之间串接1k-3.3k电阻 
  29          DC   P1.3 单片机跟模块之间串接1k-3.3k电阻 
  30          CS   已接地，不用接     
  31          ============================================     
  32          如果用户使用的是5V单片机，请看用户手册，切勿烧毁模块！ 
  33          *********************************************************/
  34          #include "stc.h"
  35          #include "intrins.h"
  36          #include "LQ12864.h"
  37           
  38          sbit LCD_SCL=P1^0;  
  39          sbit LCD_SDA=P1^1;
  40          sbit LCD_RST=P1^2; 
  41          sbit LCD_DC =P1^3; 
  42          
  43          #define XLevelL         0x00
  44          #define XLevelH         0x10
  45          #define XLevel          ((XLevelH&0x0F)*16+XLevelL)
  46          #define Max_Column      128
  47          #define Max_Row         64
  48          #define Brightness      0xCF 
  49          
  50          /*
  51          4线SPI使用说明：
  52          VBT 供内部DC-DC电压，3.3~4.3V，如果使用5V电压，为保险起见串一个100~500欧的电阻
  53          VCC 供内部逻辑电压 1.8~6V   
  54          GND 地
  55          
C51 COMPILER V7.10   LQ12864                                                               09/17/2011 23:55:08 PAGE 2   

  56          BS0 低电平
  57          BS1 低电平
  58          BS2 低电平
  59          
  60          CS  片选管脚
  61          DC  命令数据选择管脚
  62          RES 模块复位管脚 
  63          D0（SCLK） ，时钟脚，由MCU控制
  64          D1（MOSI） ，主输出从输入数据脚，由MCU控制
  65          
  66          D2 悬空      
  67          D3-D7 ， 低电平 ， 也可悬空，但最好设为低电平
  68          RD  低电平 ，也可悬空，但最好设为低电平
  69          RW  低电平 ，也可悬空，但最好设为低电平
  70          RD  低电平 ，也可悬空，但最好设为低电平   
  71          */
  72          
  73          #define X_WIDTH 128
  74          #define Y_WIDTH 64
  75          //======================================
  76          
  77          const unsigned char code F6x8[][6] =
  78          {
  79              { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
  80              { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
  81              { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
  82              { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
  83              { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
  84              { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
  85              { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
  86              { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
  87              { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
  88              { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
  89              { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
  90              { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
  91              { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
  92              { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
  93              { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
  94              { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
  95              { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
  96              { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
  97              { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
  98              { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
  99              { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
 100              { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
 101              { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
 102              { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
 103              { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
 104              { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
 105              { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
 106              { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
 107              { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
 108              { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
 109              { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
 110              { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
 111              { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
 112              { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
 113              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
 114              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
 115              { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
 116              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
 117              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
C51 COMPILER V7.10   LQ12864                                                               09/17/2011 23:55:08 PAGE 3   

 118              { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
 119              { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
 120              { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
 121              { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
 122              { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
 123              { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
 124              { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
 125              { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
 126              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
 127              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
 128              { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
 129              { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
 130              { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
 131              { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
 132              { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
 133              { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
 134              { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
 135              { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
 136              { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
 137              { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
 138              { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
 139              { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
 140              { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
 141              { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
 142              { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
 143              { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
 144              { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
 145              { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
 146              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
 147              { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
 148              { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
 149              { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
 150              { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
 151              { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
 152              { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
 153              { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
 154              { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
 155              { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
 156              { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
 157              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
 158              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
 159              { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
 160              { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
 161              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
 162              { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
 163              { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
 164              { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
 165              { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
 166              { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
 167              { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
 168              { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
 169              { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
 170              { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
 171          };
 172          
 173          const unsigned char F14x16[] = {  
 174                  0x10,0x10,0x10,0x10,0x10,0xFF,0x10,0xF0,0x12,0x1C,0xD0,0x10,0x10,0x10,
 175                  0x40,0x20,0x10,0x0C,0x03,0x10,0x08,0x3F,0x42,0x41,0x40,0x40,0x40,0x70,//龙
 176                  0x00,0x00,0xFE,0x84,0x84,0x84,0x84,0x82,0x82,0x82,0x82,0xC0,0x80,0x00,
 177                  0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x30,0x20,//丘
 178                  0x14,0x13,0x92,0x7E,0x32,0x52,0x92,0x00,0x7C,0x44,0x44,0x44,0x7C,0x00,
 179                  0x01,0x01,0x00,0xFF,0x49,0x49,0x49,0x49,0x49,0x49,0xFF,0x00,0x00,0x00,//智
C51 COMPILER V7.10   LQ12864                                                               09/17/2011 23:55:08 PAGE 4   

 180                  0xB8,0x97,0x92,0x90,0x94,0xB8,0x10,0x00,0x7F,0x48,0x48,0x44,0x74,0x20,
 181                  0xFF,0x0A,0x0A,0x4A,0x8A,0x7F,0x00,0x00,0x3F,0x44,0x44,0x42,0x72,0x20,//能      
 182          };
 183          /*
 184          const unsigned char code F14x16_Idx[] = 
 185          {
 186                  "北京龙丘邱科技智能车首选液晶"
 187          };
 188          const unsigned char F14x16[] = {        
 189          0x20,0x20,0x20,0x20,0xFF,0x00,0x00,0x00,0xFF,0x40,0x20,0x30,0x18,0x10,
 190          0x30,0x18,0x08,0x04,0x7F,0x00,0x00,0x00,0x3F,0x40,0x40,0x40,0x40,0x78,//北0
 191          0x04,0x04,0xE4,0x24,0x24,0x25,0x26,0x24,0x24,0x24,0xE4,0x06,0x04,0x00,
 192          0x20,0x10,0x19,0x0D,0x41,0x81,0x7F,0x01,0x01,0x05,0x0D,0x38,0x10,0x00,//京1
 193          0x10,0x10,0x10,0x10,0x10,0xFF,0x10,0xF0,0x12,0x1C,0xD0,0x10,0x10,0x10,
 194          0x40,0x20,0x10,0x0C,0x03,0x10,0x08,0x3F,0x42,0x41,0x40,0x40,0x40,0x70,//龙2
 195          0x00,0x00,0xFE,0x84,0x84,0x84,0x84,0x82,0x82,0x82,0x82,0xC0,0x80,0x00,
 196          0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x30,0x20,//丘3
 197          0x00,0xFC,0x24,0x24,0xE2,0x22,0x22,0x00,0xFE,0x02,0x22,0x52,0x8E,0x02,
 198          0x10,0x1F,0x10,0x08,0x0F,0x08,0x08,0x00,0xFF,0x00,0x08,0x08,0x10,0x0F,//邱4
 199          0x12,0x92,0x72,0xFE,0x51,0x91,0x00,0x22,0xCC,0x00,0x00,0xFF,0x00,0x00,
 200          0x02,0x01,0x00,0xFF,0x00,0x04,0x04,0x04,0x02,0x02,0x02,0xFF,0x01,0x01,//科5
 201          0x08,0x88,0xFF,0x48,0x28,0x00,0xC8,0x48,0x48,0x7F,0x48,0xC8,0x48,0x08,
 202          0x41,0x80,0x7F,0x00,0x40,0x40,0x20,0x13,0x0C,0x0C,0x12,0x21,0x60,0x20,//技6     
 203          0x14,0x13,0x92,0x7E,0x32,0x52,0x92,0x00,0x7C,0x44,0x44,0x44,0x7C,0x00,
 204          0x01,0x01,0x00,0xFF,0x49,0x49,0x49,0x49,0x49,0x49,0xFF,0x00,0x00,0x00,//智10
 205          0xB8,0x97,0x92,0x90,0x94,0xB8,0x10,0x00,0x7F,0x48,0x48,0x44,0x74,0x20,
 206          0xFF,0x0A,0x0A,0x4A,0x8A,0x7F,0x00,0x00,0x3F,0x44,0x44,0x42,0x72,0x20,//能11
 207          0x04,0x84,0xC4,0xA4,0x9C,0x87,0x84,0xF4,0x84,0x84,0x84,0x84,0x84,0x00,
 208          0x04,0x04,0x04,0x04,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x04,0x04,//车12
 209          0x04,0x04,0xE4,0x25,0x26,0x34,0x2C,0x24,0x24,0x26,0xE5,0x04,0x04,0x04,
 210          0x00,0x00,0x7F,0x25,0x25,0x25,0x25,0x25,0x25,0x25,0x7F,0x00,0x00,0x00,//首13
 211          0x40,0x42,0xCC,0x00,0x50,0x4E,0xC8,0x48,0x7F,0xC8,0x48,0x48,0x40,0x00,
 212          0x40,0x20,0x1F,0x20,0x48,0x46,0x41,0x40,0x40,0x47,0x48,0x48,0x4E,0x40,//选14
 213          0x61,0x06,0xE0,0x18,0x84,0xE4,0x1C,0x84,0x65,0xBE,0x24,0xA4,0x64,0x04,
 214          0x04,0xFF,0x00,0x01,0x00,0xFF,0x41,0x21,0x12,0x0C,0x1B,0x61,0xC0,0x40,//液15
 215          0x00,0x00,0x00,0x7E,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x7E,0x00,0x00,0x00,
 216          0x7F,0x25,0x25,0x25,0x25,0x7F,0x00,0x00,0x7F,0x25,0x25,0x25,0x25,0x7F,//晶16   
 217          };
 218          */
 219          
 220          //======================================================
 221          // 128X64I液晶底层驱动[8X16]字体库
 222          // 设计者: powerint
 223          // 描  述: [8X16]西文字符的字模数据 (纵向取模,字节倒序)
 224          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 225          //======================================================
 226          
 227          const unsigned char code F8X16[]=
 228          {
 229            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
 230            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
 231            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
 232            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
 233            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
 234            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
 235            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
 236            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
 237            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
 238            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
 239            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
 240            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
 241            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
C51 COMPILER V7.10   LQ12864                                                               09/17/2011 23:55:08 PAGE 5   

 242            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
 243            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
 244            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
 245            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
 246            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
 247            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
 248            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
 249            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
 250            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
 251            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
 252            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
 253            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
 254            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
 255            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
 256            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
 257            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
 258            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
 259            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
 260            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
 261            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
 262            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
 263            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
 264            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
 265            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
 266            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
 267            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
 268            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
 269            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
 270            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
 271            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
 272            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
 273            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
 274            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
 275            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
 276            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
 277            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
 278            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
 279            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
 280            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
 281            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
 282            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
 283            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
 284            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
 285            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
 286            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
 287            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
 288            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
 289            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
 290            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
 291            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
 292            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
 293            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
 294            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
 295            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
 296            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
 297            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
 298            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
 299            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
 300            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
 301            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
 302            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
 303            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
C51 COMPILER V7.10   LQ12864                                                               09/17/2011 23:55:08 PAGE 6   

 304            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
 305            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
 306            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
 307            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
 308            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
 309            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
 310            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
 311            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
 312            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
 313            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
 314            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u85
 315            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
 316            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
 317            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
 318            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
 319            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
 320            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
 321            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
 322            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
 323            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~94
 324          
 325          };
 326          
 327          
 328          void LCD_WrDat(unsigned char dat)
 329          {
 330   1              unsigned char i=8;
 331   1              //LCD_CS=0;;
 332   1              LCD_DC=1;;
 333   1        LCD_SCL=0;;
 334   1        //;;    
 335   1        while(i--)
 336   1        {
 337   2          if(dat&0x80){LCD_SDA=1;}
 338   2          else{LCD_SDA=0;}
 339   2          LCD_SCL=1; 
 340   2          ;;;
 341   2                      //;;            
 342   2          LCD_SCL=0;;    
 343   2          dat<<=1;    
 344   2        }
 345   1              //LCD_CS=1;
 346   1      }
 347          void LCD_WrCmd(unsigned char cmd)
 348          {
 349   1              unsigned char i=8;
 350   1              
 351   1              //LCD_CS=0;;
 352   1              LCD_DC=0;;
 353   1        LCD_SCL=0;;
 354   1        //;;   
 355   1        while(i--)
 356   1        {
 357   2          if(cmd&0x80){LCD_SDA=1;}
 358   2          else{LCD_SDA=0;;}
 359   2          LCD_SCL=1;;
 360   2          ;;;
 361   2                      //;;             
 362   2          LCD_SCL=0;;    
 363   2          cmd<<=1;;   
 364   2        }     
 365   1              //LCD_CS=1;
C51 COMPILER V7.10   LQ12864                                                               09/17/2011 23:55:08 PAGE 7   

 366   1      }
 367          void LCD_Set_Pos(unsigned char x, unsigned char y)
 368          { 
 369   1        LCD_WrCmd(0xb0+y);
 370   1        LCD_WrCmd(((x&0xf0)>>4)|0x10);
 371   1        LCD_WrCmd((x&0x0f)|0x01); 
 372   1      } 
 373          void LCD_Fill(unsigned char bmp_dat)
 374          {
 375   1              unsigned char y,x;
 376   1              
 377   1              for(y=0;y<8;y++)
 378   1              {
 379   2                      LCD_WrCmd(0xb0+y);
 380   2                      LCD_WrCmd(0x01);
 381   2                      LCD_WrCmd(0x10);
 382   2                      for(x=0;x<X_WIDTH;x++)
 383   2                              LCD_WrDat(bmp_dat);
 384   2              }
 385   1      }
 386          void LCD_CLS(void)
 387          {
 388   1              unsigned char y,x;      
 389   1              for(y=0;y<8;y++)
 390   1              {
 391   2                      LCD_WrCmd(0xb0+y);
 392   2                      LCD_WrCmd(0x01);
 393   2                      LCD_WrCmd(0x10); 
 394   2                      for(x=0;x<X_WIDTH;x++)
 395   2                              LCD_WrDat(0);
 396   2              }
 397   1      }
 398          void LCD_DLY_ms(unsigned int ms)
 399          {                         
 400   1        unsigned int a;
 401   1        while(ms)
 402   1        {
 403   2          a=1335;
 404   2          while(a--);
 405   2          ms--;
 406   2        }
 407   1        return;
 408   1      } 
 409          void LCD_Init(void)        
 410          {  
 411   1              LCD_SCL=1;
 412   1              //LCD_CS=1;     //预制SLK和SS为高电平   
 413   1              LCD_RST=0;
 414   1              LCD_DLY_ms(50);
 415   1              LCD_RST=1;
 416   1              
 417   1              //从上电到下面开始初始化要有足够的时间，即等待RC复位完毕   
 418   1        
 419   1        LCD_WrCmd(0xae);//--turn off oled panel
 420   1        LCD_WrCmd(0x00);//---set low column address
 421   1        LCD_WrCmd(0x10);//---set high column address
 422   1        LCD_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 423   1        LCD_WrCmd(0x81);//--set contrast control register
 424   1        LCD_WrCmd(0xcf); // Set SEG Output Current Brightness
 425   1        LCD_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 426   1        LCD_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 427   1        LCD_WrCmd(0xa6);//--set normal display
C51 COMPILER V7.10   LQ12864                                                               09/17/2011 23:55:08 PAGE 8   

 428   1        LCD_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
 429   1        LCD_WrCmd(0x3f);//--1/64 duty
 430   1        LCD_WrCmd(0xd3);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 431   1        LCD_WrCmd(0x00);//-not offset
 432   1        LCD_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
 433   1        LCD_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
 434   1        LCD_WrCmd(0xd9);//--set pre-charge period
 435   1        LCD_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 436   1        LCD_WrCmd(0xda);//--set com pins hardware configuration
 437   1        LCD_WrCmd(0x12);
 438   1        LCD_WrCmd(0xdb);//--set vcomh
 439   1        LCD_WrCmd(0x40);//Set VCOM Deselect Level
 440   1        LCD_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
 441   1        LCD_WrCmd(0x02);//
 442   1        LCD_WrCmd(0x8d);//--set Charge Pump enable/disable
 443   1        LCD_WrCmd(0x14);//--set(0x10) disable
 444   1        LCD_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
 445   1        LCD_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
 446   1        LCD_WrCmd(0xaf);//--turn on oled panel
 447   1        LCD_Fill(0x00);  //初始清屏
 448   1        LCD_Set_Pos(0,0);     
 449   1      } 
 450          
 451          //==============================================================
 452          //函数名：LCD_P6x8Str(unsigned char x,unsigned char y,unsigned char *p)
 453          //功能描述：写入一组标准ASCII字符串
 454          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
 455          //返回：无
 456          //==============================================================  
 457          void LCD_P6x8Str(unsigned char x,unsigned char y,unsigned char ch[])
 458          {
 459   1        unsigned char c=0,i=0,j=0;      
 460   1        while (ch[j]!='\0')
 461   1        {    
 462   2          c =ch[j]-32;
 463   2          if(x>126){x=0;y++;}
 464   2          LCD_Set_Pos(x,y);    
 465   2              for(i=0;i<6;i++)     
 466   2                LCD_WrDat(F6x8[c][i]);  
 467   2              x+=6;
 468   2              j++;
 469   2        }
 470   1      }
 471          //==============================================================
 472          //函数名：LCD_P8x16Str(unsigned char x,unsigned char y,unsigned char *p)
 473          //功能描述：写入一组标准ASCII字符串
 474          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
 475          //返回：无
 476          //============================================================== 
 477           
 478          void LCD_P8x16Str(unsigned char x,unsigned char y,unsigned char ch[])
 479          {
 480   1        unsigned char c=0,i=0,j=0;
 481   1              
 482   1        while (ch[j]!='\0')
 483   1        {    
 484   2          c =ch[j]-32;
 485   2          if(x>120){x=0;y++;}
 486   2          LCD_Set_Pos(x,y);    
 487   2              for(i=0;i<8;i++)     
 488   2                LCD_WrDat(F8X16[c*16+i]);
 489   2              LCD_Set_Pos(x,y+1);    
C51 COMPILER V7.10   LQ12864                                                               09/17/2011 23:55:08 PAGE 9   

 490   2              for(i=0;i<8;i++)     
 491   2                LCD_WrDat(F8X16[c*16+i+8]);  
 492   2              x+=8;
 493   2              j++;
 494   2        }
 495   1      }
 496          
 497          //输出汉字字符串
 498          void LCD_P14x16Ch(unsigned char x,unsigned char y,unsigned char N)
 499          {
 500   1              unsigned char wm=0,ii = 0;
 501   1              unsigned int adder=28*N;        
 502   1              LCD_Set_Pos(x , y);
 503   1              for(wm = 0;wm < 14;wm++)               
 504   1              {
 505   2                      LCD_WrDat(F14x16[adder]);       
 506   2                      adder += 1;
 507   2              }      
 508   1              LCD_Set_Pos(x,y + 1); 
 509   1              for(wm = 0;wm < 14;wm++)          
 510   1              {
 511   2                      LCD_WrDat(F14x16[adder]);
 512   2                      adder += 1;
 513   2              }               
 514   1      }
 515          
 516          
 517          
*** WARNING C316 IN LINE 517 OF LQ12864.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    656    ----
   CONSTANT SIZE    =   2072    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =    112      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
